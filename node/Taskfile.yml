# https://taskfile.dev

version: '3'

dotenv: [".env"]

tasks:
  default:
    cmds:
      - go-task -l
    silent: true

  build:
    desc: build li
    cmds:
      - BUILDKIT_PROGRESS=plain docker compose build 
      #- docker export $(docker create ${IMAGE}) --output="livenet.tar"

  start:
    cmds:
      - mkdir -p runtime releases
      - touch runtime/bash_history
      - docker compose up

  logs:
    cmds:
      - sudo journalctl -f

  cli:
    cmds:
      - docker compose exec lnode bash

  ssh:
    desc: "connect to client node"
    cmds:
      - ssh root@192.168.124.18

  diff:
    cmds:
      - docker diff ${NODE}

  commit:
    desc: task commit -- 0.0.1
    vars:
      Id: Id
    cmds:
      - |
        ID=$(docker container ls --all --quiet --no-trunc --filter "name=${NODE}")
        RELEASE={{.CLI_ARGS}}
        docker diff ${NODE} > releases/${RELEASE}.diff
        docker commit ${ID} livenet/node:${RELEASE}
        docker export ${NODE} --output="releases/${RELEASE}.tar"
        gzip releases/${RELEASE}.tar

  destroy:
    cmds:
      - docker compose down
      - docker images | grep livenet/node | awk '{print $3}' | xargs docker rmi

  mount:
    cmds:
      - mkdir -p /tmp/test
      - sudo mount -t nfs -o vers=4,loud,retry=0,timeo=5 192.168.124.1:/ /tmp/test
      - ls /tmp/test
      - sudo umount /tmp/test

  network:
    desc: create livenet network
    cmds:
      - |
        sudo virsh net-info livenet && sudo virsh net-destroy livenet || true
        sudo virsh net-define libvirt/net-livenet.xml
        sudo virsh net-start livenet
        docker compose down

  vm:disk:
    cmds:
      - |
        [ -f ${DISK} ] || qemu-img create -f qcow2 -o preallocation=metadata ${DISK} 60G

  vm:bios:
    desc: "boot vm in uefi: see 4.3 on https://wiki.archlinux.org/title/QEMU"
    cmds:
      - task: vm:disk
      - |
        qemu-system-x86_64 -nographic -smp 2 -m 2048 -enable-kvm -net nic,netdev=net0 -netdev bridge,br=livenet,id=net0 \
          -drive id=vda,file=${DISK} \
          -boot n

  vm:cd:
    desc: "boot systemrescuecd"
    cmds:
      - |
        [ -f runtime/systemrescue-10.01-amd64.iso ] || https://fastly-cdn.system-rescue.org/releases/10.01/systemrescue-10.01-amd64.iso
        qemu-system-x86_64 -nographic -smp 2 -m 2048 -enable-kvm -net nic,netdev=net0 -netdev bridge,br=livenet,id=net0 \
          -cdrom runtime/systemrescue-10.01-amd64.iso

  vm:efi:
    desc: "boot vm in uefi: see 4.3 on https://wiki.archlinux.org/title/QEMU"
    cmds:
      - |
        cp /usr/share/edk2-ovmf/x64/OVMF_VARS.fd /tmp/OVMF_VARS.fd
        qemu-system-x86_64 -smp 2 -m 2048 -enable-kvm -net nic,netdev=net0 -netdev bridge,br=livenet,id=net0 \
          -drive if=pflash,format=raw,unit=0,readonly=on,file=/usr/share/edk2-ovmf/x64/OVMF_CODE.fd \
          -drive if=pflash,format=raw,unit=1,file=/tmp/OVMF_VARS.fd
